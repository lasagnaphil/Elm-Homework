Elm.FadingDots = Elm.FadingDots || {};
Elm.FadingDots.make = function (_elm) {
   "use strict";
   _elm.FadingDots = _elm.FadingDots || {};
   if (_elm.FadingDots.values)
   return _elm.FadingDots.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   $moduleName = "FadingDots",
   $Basics = Elm.Basics.make(_elm),
   $Color = Elm.Color.make(_elm),
   $Graphics$Collage = Elm.Graphics.Collage.make(_elm),
   $Graphics$Element = Elm.Graphics.Element.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Mouse = Elm.Mouse.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $Time = Elm.Time.make(_elm),
   $Window = Elm.Window.make(_elm);
   var time = A3($Signal.foldp,
   F2(function (x,y) {
      return x + y;
   }),
   0,
   $Time.fps(60));
   var clicks = function () {
      var onClick = $Signal.sampleOn($Mouse.clicks);
      return A2($Signal._op["~"],
      A2($Signal._op["<~"],
      F2(function (v0,v1) {
         return {ctor: "_Tuple2"
                ,_0: v0
                ,_1: v1};
      }),
      onClick(time)),
      onClick($Mouse.position));
   }();
   var setAlpha = F2(function (a,
   c) {
      return function () {
         var rgb = $Color.toRgb(c);
         return A4($Color.rgba,
         rgb.red,
         rgb.green,
         rgb.blue,
         a);
      }();
   });
   var tfade = 2 * $Time.second;
   var pruneOld = F2(function (now,
   clicks) {
      return function () {
         switch (clicks.ctor)
         {case "::":
            switch (clicks._0.ctor)
              {case "_Tuple2":
                 return _U.cmp(now - clicks._0._0,
                   tfade) > 0 ? _L.fromArray([]) : A2($List._op["::"],
                   {ctor: "_Tuple2"
                   ,_0: clicks._0._0
                   ,_1: clicks._0._1},
                   A2(pruneOld,now,clicks._1));}
              break;
            case "[]":
            return _L.fromArray([]);}
         _U.badCase($moduleName,
         "between lines 22 and 26");
      }();
   });
   var upstate = F2(function (u,
   _v5) {
      return function () {
         switch (_v5.ctor)
         {case "_Tuple2":
            return function () {
                 switch (u.ctor)
                 {case "NewClick":
                    switch (u._0.ctor)
                      {case "_Tuple2":
                         return {ctor: "_Tuple2"
                                ,_0: u._0._0
                                ,_1: A2($List._op["::"],
                                {ctor: "_Tuple2"
                                ,_0: u._0._0
                                ,_1: u._0._1},
                                A2(pruneOld,u._0._0,_v5._1))};}
                      break;
                    case "NewTime":
                    return {ctor: "_Tuple2"
                           ,_0: u._0
                           ,_1: A2(pruneOld,u._0,_v5._1)};}
                 _U.badCase($moduleName,
                 "between lines 28 and 30");
              }();}
         _U.badCase($moduleName,
         "between lines 28 and 30");
      }();
   });
   var view = F2(function (_v14,
   _v15) {
      return function () {
         switch (_v15.ctor)
         {case "_Tuple2":
            return function () {
                 switch (_v14.ctor)
                 {case "_Tuple2":
                    return function () {
                         var $ = {ctor: "_Tuple2"
                                 ,_0: $Basics.toFloat(_v14._0)
                                 ,_1: $Basics.toFloat(_v14._1)},
                         fw = $._0,
                         fh = $._1;
                         var $ = {ctor: "_Tuple2"
                                 ,_0: (0 - fw) / 2
                                 ,_1: fh / 2},
                         dx = $._0,
                         dy = $._1;
                         var rad = function (pct) {
                            return 20 + 100 * pct;
                         };
                         var color = function (a) {
                            return A2(setAlpha,
                            a,
                            $Color.darkBlue);
                         };
                         var circ = function (pct) {
                            return A2($Graphics$Collage.filled,
                            color(1 - pct),
                            $Graphics$Collage.circle(rad(pct)));
                         };
                         var dots = $List.map(function (_v22) {
                            return function () {
                               switch (_v22.ctor)
                               {case "_Tuple2":
                                  switch (_v22._1.ctor)
                                    {case "_Tuple2":
                                       return function () {
                                            var pct = (_v15._0 - _v22._0) / tfade;
                                            return $Graphics$Collage.move({ctor: "_Tuple2"
                                                                          ,_0: $Basics.toFloat(_v22._1._0) + dx
                                                                          ,_1: $Basics.toFloat(0 - _v22._1._1) + dy})(circ(pct));
                                         }();}
                                    break;}
                               _U.badCase($moduleName,
                               "between lines 46 and 47");
                            }();
                         })(_v15._1);
                         var str = function () {
                            switch (_v15._1.ctor)
                            {case "::":
                               return $Graphics$Element.show(_v15._1._0);
                               case "[]":
                               return $Graphics$Element.show("...");}
                            _U.badCase($moduleName,
                            "on line 38, column 15 to 68");
                         }();
                         return A3($Graphics$Collage.collage,
                         _v14._0,
                         _v14._1,
                         A2($Basics._op["++"],
                         dots,
                         _L.fromArray([$Graphics$Collage.toForm(str)])));
                      }();}
                 _U.badCase($moduleName,
                 "between lines 38 and 50");
              }();}
         _U.badCase($moduleName,
         "between lines 38 and 50");
      }();
   });
   var initState = {ctor: "_Tuple2"
                   ,_0: 0
                   ,_1: _L.fromArray([])};
   var NewClick = function (a) {
      return {ctor: "NewClick"
             ,_0: a};
   };
   var NewTime = function (a) {
      return {ctor: "NewTime"
             ,_0: a};
   };
   var state = A3($Signal.foldp,
   upstate,
   initState,
   A2($Signal.merge,
   A2($Signal._op["<~"],
   NewTime,
   time),
   A2($Signal._op["<~"],
   NewClick,
   clicks)));
   var main = A2($Signal._op["~"],
   A2($Signal._op["<~"],
   view,
   $Window.dimensions),
   state);
   _elm.FadingDots.values = {_op: _op
                            ,NewTime: NewTime
                            ,NewClick: NewClick
                            ,initState: initState
                            ,tfade: tfade
                            ,pruneOld: pruneOld
                            ,upstate: upstate
                            ,setAlpha: setAlpha
                            ,view: view
                            ,time: time
                            ,clicks: clicks
                            ,state: state
                            ,main: main};
   return _elm.FadingDots.values;
};